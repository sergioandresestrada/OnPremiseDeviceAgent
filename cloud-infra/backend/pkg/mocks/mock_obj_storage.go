// Code generated by MockGen. DO NOT EDIT.
// Source: obj_storage/obj_storage.go

// Package mocks is a generated GoMock package.
package mocks

import (
	multipart "mime/multipart"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockObj_storage is a mock of Obj_storage interface.
type MockObj_storage struct {
	ctrl     *gomock.Controller
	recorder *MockObj_storageMockRecorder
}

// MockObj_storageMockRecorder is the mock recorder for MockObj_storage.
type MockObj_storageMockRecorder struct {
	mock *MockObj_storage
}

// NewMockObj_storage creates a new mock instance.
func NewMockObj_storage(ctrl *gomock.Controller) *MockObj_storage {
	mock := &MockObj_storage{ctrl: ctrl}
	mock.recorder = &MockObj_storageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockObj_storage) EXPECT() *MockObj_storageMockRecorder {
	return m.recorder
}

// UploadFile mocks base method.
func (m *MockObj_storage) UploadFile(arg0 *multipart.File, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockObj_storageMockRecorder) UploadFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockObj_storage)(nil).UploadFile), arg0, arg1)
}
