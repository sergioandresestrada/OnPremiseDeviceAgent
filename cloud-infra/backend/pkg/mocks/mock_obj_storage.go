// Code generated by MockGen. DO NOT EDIT.
// Source: obj_storage/obj_storage.go

// Package mocks is a generated GoMock package.
package mocks

import (
	types "backend/pkg/types"
	io "io"
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockObjStorage is a mock of ObjStorage interface.
type MockObjStorage struct {
	ctrl     *gomock.Controller
	recorder *MockObjStorageMockRecorder
}

// MockObjStorageMockRecorder is the mock recorder for MockObjStorage.
type MockObjStorageMockRecorder struct {
	mock *MockObjStorage
}

// NewMockObjStorage creates a new mock instance.
func NewMockObjStorage(ctrl *gomock.Controller) *MockObjStorage {
	mock := &MockObjStorage{ctrl: ctrl}
	mock.recorder = &MockObjStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockObjStorage) EXPECT() *MockObjStorageMockRecorder {
	return m.recorder
}

// AvailableInformation mocks base method.
func (m *MockObjStorage) AvailableInformation() (types.Information, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AvailableInformation")
	ret0, _ := ret[0].(types.Information)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AvailableInformation indicates an expected call of AvailableInformation.
func (mr *MockObjStorageMockRecorder) AvailableInformation() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AvailableInformation", reflect.TypeOf((*MockObjStorage)(nil).AvailableInformation))
}

// GetFile mocks base method.
func (m *MockObjStorage) GetFile(arg0 string, arg1 *os.File) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFile", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetFile indicates an expected call of GetFile.
func (mr *MockObjStorageMockRecorder) GetFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*MockObjStorage)(nil).GetFile), arg0, arg1)
}

// UploadFile mocks base method.
func (m *MockObjStorage) UploadFile(arg0 io.Reader, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockObjStorageMockRecorder) UploadFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockObjStorage)(nil).UploadFile), arg0, arg1)
}
